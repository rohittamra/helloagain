name: Hello Again

on:
  push:
    branches: ["first_try"]

jobs:
  # terraform:
  #   runs-on: ubuntu-latest
  #   env:
  #     TF_WORKING_DIR: terraform

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Setup Terraform
  #       uses: hashicorp/setup-terraform@v3
  #       with:
  #         terraform_version: 1.5.7

  #     - name: Azure CLI login
  #       uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}

  #     - name: Terraform Init
  #       working-directory: ${{ env.TF_WORKING_DIR }}
  #       run: terraform init

  #     - name: Terraform Apply
  #       working-directory: ${{ env.TF_WORKING_DIR }}
  #       run: terraform apply -auto-approve

  docker_build:
    runs-on: ubuntu-latest
    needs: terraform
    env:
      DOCKER_APP_DIR: cors_application
      DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/cors-proxy:latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker image
        working-directory: ${{ env.DOCKER_APP_DIR }}
        run: |
          docker build -t ${{ env.DOCKER_IMAGE }} .
          docker push ${{ env.DOCKER_IMAGE }}

  k8s_deploy:
    runs-on: ubuntu-latest
    needs: docker_build
    env:
      TF_WORKING_DIR: terraform
      K8S_DIR: kuberenetes

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure CLI login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get AKS credentials
        run: |
          AKS_NAME=$(terraform -chdir=${{ env.TF_WORKING_DIR }} output -raw cluster_name)
          AKS_RG=$(terraform -chdir=${{ env.TF_WORKING_DIR }} output -raw resource_group_name)
          az aks get-credentials --name $AKS_NAME --resource-group $AKS_RG --overwrite-existing

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f ${{ env.K8S_DIR }}/deployment.yml
          kubectl apply -f ${{ env.K8S_DIR }}/service.yml
          kubectl apply -f ${{ env.K8S_DIR }}/hpa.yml
